---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.middlewares: traefik-forward-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
    external-dns.alpha.kubernetes.io/target: "traefik.k8s.305-1700.tdude.co"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - auth.k8s.305-1700.tdude.co
    - dashboard.traefik.k8s.235.tdude.co
    secretName: dashboard-traefik-ingress-cert
  rules:
  - host: dashboard.traefik.k8s.305-1700.tdude.co
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik-dashboard
            port:
              name: dashboard-http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.tls: "true"
    external-dns.alpha.kubernetes.io/target: "traefik.k8s.305-1700.tdude.co"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - auth.k8s.305-1700.tdude.co
    - dashboard.traefik.k8s.305-1700.tdude.co
    secretName: dashboard-traefik-ingress-cert
  rules:
  - host: auth.k8s.305-1700.tdude.co
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              name: oauth2-proxy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: traefik
  name: traefik-dashboard
spec:
  ipFamilyPolicy: RequireDualStack
  ipFamilies:
  - IPv6
  - IPv4
  ports:
  - name: dashboard-http
    port: 80
    targetPort: traefik
  selector:
    app.kubernetes.io/name: traefik
  type: ClusterIP

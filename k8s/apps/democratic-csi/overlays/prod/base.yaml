apiVersion: v1
kind: Namespace
metadata:
  name: democratic-csi
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: freenas-iscsi-csi
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: controller-expand-secret-freenas-iscsi-csi-zfs-iscsi-democratic
  csi.storage.k8s.io/controller-expand-secret-namespace: democratic-csi
  csi.storage.k8s.io/controller-publish-secret-name: controller-publish-secret-freenas-iscsi-csi-zfs-iscsi-democrati
  csi.storage.k8s.io/controller-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-publish-secret-name: node-publish-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
  csi.storage.k8s.io/node-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-stage-secret-name: node-stage-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
  csi.storage.k8s.io/node-stage-secret-namespace: democratic-csi
  csi.storage.k8s.io/provisioner-secret-name: provisioner-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
  csi.storage.k8s.io/provisioner-secret-namespace: democratic-csi
  fsType: xfs
provisioner: org.democratic-csi.iscsi
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: freenas-nfs-csi
mountOptions:
- noatime
- nfsvers=3
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: controller-expand-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
  csi.storage.k8s.io/controller-expand-secret-namespace: democratic-csi
  csi.storage.k8s.io/controller-publish-secret-name: controller-publish-secret-freenas-nfs-csi-zfs-nfs-democratic-cs
  csi.storage.k8s.io/controller-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-publish-secret-name: node-publish-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
  csi.storage.k8s.io/node-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-stage-secret-name: node-stage-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
  csi.storage.k8s.io/node-stage-secret-namespace: democratic-csi
  csi.storage.k8s.io/provisioner-secret-name: provisioner-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
  csi.storage.k8s.io/provisioner-secret-namespace: democratic-csi
  fsType: nfs
provisioner: org.democratic-csi.nfs
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: truenas-nfs-spitfire-fast
mountOptions:
- noatime
- nfsvers=3
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: controller-expand-secret-truenas-nfs-spitfire-fast-zfs-nfs-spit
  csi.storage.k8s.io/controller-expand-secret-namespace: democratic-csi
  csi.storage.k8s.io/controller-publish-secret-name: controller-publish-secret-truenas-nfs-spitfire-fast-zfs-nfs-spi
  csi.storage.k8s.io/controller-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-publish-secret-name: node-publish-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire
  csi.storage.k8s.io/node-publish-secret-namespace: democratic-csi
  csi.storage.k8s.io/node-stage-secret-name: node-stage-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire-fa
  csi.storage.k8s.io/node-stage-secret-namespace: democratic-csi
  csi.storage.k8s.io/provisioner-secret-name: provisioner-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire-f
  csi.storage.k8s.io/provisioner-secret-namespace: democratic-csi
  fsType: nfs
provisioner: org.democratic-csi.nfs-spitfire-fast
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/419
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: volumesnapshotclasses.snapshot.storage.k8s.io
spec:
  group: snapshot.storage.k8s.io
  names:
    kind: VolumeSnapshotClass
    listKind: VolumeSnapshotClassList
    plural: volumesnapshotclasses
    singular: volumesnapshotclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .driver
      name: Driver
      type: string
    - description: Determines whether a VolumeSnapshotContent created through the
        VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
      jsonPath: .deletionPolicy
      name: DeletionPolicy
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshotClass specifies parameters that a underlying storage
          system uses when creating a volume snapshot. A specific VolumeSnapshotClass
          is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
          are non-namespaced
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          deletionPolicy:
            description: deletionPolicy determines whether a VolumeSnapshotContent
              created through the VolumeSnapshotClass should be deleted when its bound
              VolumeSnapshot is deleted. Supported values are "Retain" and "Delete".
              "Retain" means that the VolumeSnapshotContent and its physical snapshot
              on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent
              and its physical snapshot on underlying storage system are deleted.
              Required.
            enum:
            - Delete
            - Retain
            type: string
          driver:
            description: driver is the name of the storage driver that handles this
              VolumeSnapshotClass. Required.
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          parameters:
            additionalProperties:
              type: string
            description: parameters is a key-value map with storage driver specific
              parameters for creating snapshots. These values are opaque to Kubernetes.
            type: object
        required:
        - deletionPolicy
        - driver
        type: object
    served: true
    storage: true
    subresources: {}
  - additionalPrinterColumns:
    - jsonPath: .driver
      name: Driver
      type: string
    - description: Determines whether a VolumeSnapshotContent created through the
        VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
      jsonPath: .deletionPolicy
      name: DeletionPolicy
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshotClass is deprecated;
      use snapshot.storage.k8s.io/v1 VolumeSnapshotClass
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshotClass specifies parameters that a underlying storage
          system uses when creating a volume snapshot. A specific VolumeSnapshotClass
          is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
          are non-namespaced
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          deletionPolicy:
            description: deletionPolicy determines whether a VolumeSnapshotContent
              created through the VolumeSnapshotClass should be deleted when its bound
              VolumeSnapshot is deleted. Supported values are "Retain" and "Delete".
              "Retain" means that the VolumeSnapshotContent and its physical snapshot
              on underlying storage system are kept. "Delete" means that the VolumeSnapshotContent
              and its physical snapshot on underlying storage system are deleted.
              Required.
            enum:
            - Delete
            - Retain
            type: string
          driver:
            description: driver is the name of the storage driver that handles this
              VolumeSnapshotClass. Required.
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          parameters:
            additionalProperties:
              type: string
            description: parameters is a key-value map with storage driver specific
              parameters for creating snapshots. These values are opaque to Kubernetes.
            type: object
        required:
        - deletionPolicy
        - driver
        type: object
    served: true
    storage: false
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/419
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: volumesnapshotcontents.snapshot.storage.k8s.io
spec:
  group: snapshot.storage.k8s.io
  names:
    kind: VolumeSnapshotContent
    listKind: VolumeSnapshotContentList
    plural: volumesnapshotcontents
    singular: volumesnapshotcontent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Indicates if the snapshot is ready to be used to restore a volume.
      jsonPath: .status.readyToUse
      name: ReadyToUse
      type: boolean
    - description: Represents the complete size of the snapshot in bytes
      jsonPath: .status.restoreSize
      name: RestoreSize
      type: integer
    - description: Determines whether this VolumeSnapshotContent and its physical
        snapshot on the underlying storage system should be deleted when its bound
        VolumeSnapshot is deleted.
      jsonPath: .spec.deletionPolicy
      name: DeletionPolicy
      type: string
    - description: Name of the CSI driver used to create the physical snapshot on
        the underlying storage system.
      jsonPath: .spec.driver
      name: Driver
      type: string
    - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
      jsonPath: .spec.volumeSnapshotClassName
      name: VolumeSnapshotClass
      type: string
    - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
        object is bound.
      jsonPath: .spec.volumeSnapshotRef.name
      name: VolumeSnapshot
      type: string
    - description: Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent
        object is bound.
      jsonPath: .spec.volumeSnapshotRef.namespace
      name: VolumeSnapshotNamespace
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshotContent represents the actual "on-disk" snapshot
          object in the underlying storage system
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          spec:
            description: spec defines properties of a VolumeSnapshotContent created
              by the underlying storage system. Required.
            properties:
              deletionPolicy:
                description: deletionPolicy determines whether this VolumeSnapshotContent
                  and its physical snapshot on the underlying storage system should
                  be deleted when its bound VolumeSnapshot is deleted. Supported values
                  are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                  and its physical snapshot on underlying storage system are kept.
                  "Delete" means that the VolumeSnapshotContent and its physical snapshot
                  on underlying storage system are deleted. For dynamically provisioned
                  snapshots, this field will automatically be filled in by the CSI
                  snapshotter sidecar with the "DeletionPolicy" field defined in the
                  corresponding VolumeSnapshotClass. For pre-existing snapshots, users
                  MUST specify this field when creating the  VolumeSnapshotContent
                  object. Required.
                enum:
                - Delete
                - Retain
                type: string
              driver:
                description: driver is the name of the CSI driver used to create the
                  physical snapshot on the underlying storage system. This MUST be
                  the same as the name returned by the CSI GetPluginName() call for
                  that driver. Required.
                type: string
              source:
                description: source specifies whether the snapshot is (or should be)
                  dynamically provisioned or already exists, and just requires a Kubernetes
                  object representation. This field is immutable after creation. Required.
                oneOf:
                - required:
                  - snapshotHandle
                - required:
                  - volumeHandle
                properties:
                  snapshotHandle:
                    description: snapshotHandle specifies the CSI "snapshot_id" of
                      a pre-existing snapshot on the underlying storage system for
                      which a Kubernetes object representation was (or should be)
                      created. This field is immutable.
                    type: string
                  volumeHandle:
                    description: volumeHandle specifies the CSI "volume_id" of the
                      volume from which a snapshot should be dynamically taken from.
                      This field is immutable.
                    type: string
                type: object
              volumeSnapshotClassName:
                description: name of the VolumeSnapshotClass from which this snapshot
                  was (or will be) created. Note that after provisioning, the VolumeSnapshotClass
                  may be deleted or recreated with different set of values, and as
                  such, should not be referenced post-snapshot creation.
                type: string
              volumeSnapshotRef:
                description: volumeSnapshotRef specifies the VolumeSnapshot object
                  to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                  field must reference to this VolumeSnapshotContent's name for the
                  bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                  object, name and namespace of the VolumeSnapshot object MUST be
                  provided for binding to happen. This field is immutable after creation.
                  Required.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - deletionPolicy
            - driver
            - source
            - volumeSnapshotRef
            type: object
          status:
            description: status represents the current information of a snapshot.
            properties:
              creationTime:
                description: creationTime is the timestamp when the point-in-time
                  snapshot is taken by the underlying storage system. In dynamic snapshot
                  creation case, this field will be filled in by the CSI snapshotter
                  sidecar with the "creation_time" value returned from CSI "CreateSnapshot"
                  gRPC call. For a pre-existing snapshot, this field will be filled
                  with the "creation_time" value returned from the CSI "ListSnapshots"
                  gRPC call if the driver supports it. If not specified, it indicates
                  the creation time is unknown. The format of this field is a Unix
                  nanoseconds time encoded as an int64. On Unix, the command `date
                  +%s%N` returns the current time in nanoseconds since 1970-01-01
                  00:00:00 UTC.
                format: int64
                type: integer
              error:
                description: error is the last observed error during snapshot creation,
                  if any. Upon success after retry, this error field will be cleared.
                properties:
                  message:
                    description: 'message is a string detailing the encountered error
                      during snapshot creation if specified. NOTE: message may be
                      logged, and it should not contain sensitive information.'
                    type: string
                  time:
                    description: time is the timestamp when the error was encountered.
                    format: date-time
                    type: string
                type: object
              readyToUse:
                description: readyToUse indicates if a snapshot is ready to be used
                  to restore a volume. In dynamic snapshot creation case, this field
                  will be filled in by the CSI snapshotter sidecar with the "ready_to_use"
                  value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "ready_to_use" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it, otherwise, this field will be set to "True". If not specified,
                  it means the readiness of a snapshot is unknown.
                type: boolean
              restoreSize:
                description: restoreSize represents the complete size of the snapshot
                  in bytes. In dynamic snapshot creation case, this field will be
                  filled in by the CSI snapshotter sidecar with the "size_bytes" value
                  returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "size_bytes" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it. When restoring a volume from this snapshot, the size of the
                  volume MUST NOT be smaller than the restoreSize if it is specified,
                  otherwise the restoration will fail. If not specified, it indicates
                  that the size is unknown.
                format: int64
                minimum: 0
                type: integer
              snapshotHandle:
                description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                  on the underlying storage system. If not specified, it indicates
                  that dynamic snapshot creation has either failed or it is still
                  in progress.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Indicates if the snapshot is ready to be used to restore a volume.
      jsonPath: .status.readyToUse
      name: ReadyToUse
      type: boolean
    - description: Represents the complete size of the snapshot in bytes
      jsonPath: .status.restoreSize
      name: RestoreSize
      type: integer
    - description: Determines whether this VolumeSnapshotContent and its physical
        snapshot on the underlying storage system should be deleted when its bound
        VolumeSnapshot is deleted.
      jsonPath: .spec.deletionPolicy
      name: DeletionPolicy
      type: string
    - description: Name of the CSI driver used to create the physical snapshot on
        the underlying storage system.
      jsonPath: .spec.driver
      name: Driver
      type: string
    - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
      jsonPath: .spec.volumeSnapshotClassName
      name: VolumeSnapshotClass
      type: string
    - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
        object is bound.
      jsonPath: .spec.volumeSnapshotRef.name
      name: VolumeSnapshot
      type: string
    - description: Namespace of the VolumeSnapshot object to which this VolumeSnapshotContent
        object is bound.
      jsonPath: .spec.volumeSnapshotRef.namespace
      name: VolumeSnapshotNamespace
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshotContent is deprecated;
      use snapshot.storage.k8s.io/v1 VolumeSnapshotContent
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshotContent represents the actual "on-disk" snapshot
          object in the underlying storage system
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          spec:
            description: spec defines properties of a VolumeSnapshotContent created
              by the underlying storage system. Required.
            properties:
              deletionPolicy:
                description: deletionPolicy determines whether this VolumeSnapshotContent
                  and its physical snapshot on the underlying storage system should
                  be deleted when its bound VolumeSnapshot is deleted. Supported values
                  are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                  and its physical snapshot on underlying storage system are kept.
                  "Delete" means that the VolumeSnapshotContent and its physical snapshot
                  on underlying storage system are deleted. For dynamically provisioned
                  snapshots, this field will automatically be filled in by the CSI
                  snapshotter sidecar with the "DeletionPolicy" field defined in the
                  corresponding VolumeSnapshotClass. For pre-existing snapshots, users
                  MUST specify this field when creating the  VolumeSnapshotContent
                  object. Required.
                enum:
                - Delete
                - Retain
                type: string
              driver:
                description: driver is the name of the CSI driver used to create the
                  physical snapshot on the underlying storage system. This MUST be
                  the same as the name returned by the CSI GetPluginName() call for
                  that driver. Required.
                type: string
              source:
                description: source specifies whether the snapshot is (or should be)
                  dynamically provisioned or already exists, and just requires a Kubernetes
                  object representation. This field is immutable after creation. Required.
                properties:
                  snapshotHandle:
                    description: snapshotHandle specifies the CSI "snapshot_id" of
                      a pre-existing snapshot on the underlying storage system for
                      which a Kubernetes object representation was (or should be)
                      created. This field is immutable.
                    type: string
                  volumeHandle:
                    description: volumeHandle specifies the CSI "volume_id" of the
                      volume from which a snapshot should be dynamically taken from.
                      This field is immutable.
                    type: string
                type: object
              volumeSnapshotClassName:
                description: name of the VolumeSnapshotClass from which this snapshot
                  was (or will be) created. Note that after provisioning, the VolumeSnapshotClass
                  may be deleted or recreated with different set of values, and as
                  such, should not be referenced post-snapshot creation.
                type: string
              volumeSnapshotRef:
                description: volumeSnapshotRef specifies the VolumeSnapshot object
                  to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                  field must reference to this VolumeSnapshotContent's name for the
                  bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                  object, name and namespace of the VolumeSnapshot object MUST be
                  provided for binding to happen. This field is immutable after creation.
                  Required.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - deletionPolicy
            - driver
            - source
            - volumeSnapshotRef
            type: object
          status:
            description: status represents the current information of a snapshot.
            properties:
              creationTime:
                description: creationTime is the timestamp when the point-in-time
                  snapshot is taken by the underlying storage system. In dynamic snapshot
                  creation case, this field will be filled in by the CSI snapshotter
                  sidecar with the "creation_time" value returned from CSI "CreateSnapshot"
                  gRPC call. For a pre-existing snapshot, this field will be filled
                  with the "creation_time" value returned from the CSI "ListSnapshots"
                  gRPC call if the driver supports it. If not specified, it indicates
                  the creation time is unknown. The format of this field is a Unix
                  nanoseconds time encoded as an int64. On Unix, the command `date
                  +%s%N` returns the current time in nanoseconds since 1970-01-01
                  00:00:00 UTC.
                format: int64
                type: integer
              error:
                description: error is the last observed error during snapshot creation,
                  if any. Upon success after retry, this error field will be cleared.
                properties:
                  message:
                    description: 'message is a string detailing the encountered error
                      during snapshot creation if specified. NOTE: message may be
                      logged, and it should not contain sensitive information.'
                    type: string
                  time:
                    description: time is the timestamp when the error was encountered.
                    format: date-time
                    type: string
                type: object
              readyToUse:
                description: readyToUse indicates if a snapshot is ready to be used
                  to restore a volume. In dynamic snapshot creation case, this field
                  will be filled in by the CSI snapshotter sidecar with the "ready_to_use"
                  value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "ready_to_use" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it, otherwise, this field will be set to "True". If not specified,
                  it means the readiness of a snapshot is unknown.
                type: boolean
              restoreSize:
                description: restoreSize represents the complete size of the snapshot
                  in bytes. In dynamic snapshot creation case, this field will be
                  filled in by the CSI snapshotter sidecar with the "size_bytes" value
                  returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "size_bytes" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it. When restoring a volume from this snapshot, the size of the
                  volume MUST NOT be smaller than the restoreSize if it is specified,
                  otherwise the restoration will fail. If not specified, it indicates
                  that the size is unknown.
                format: int64
                minimum: 0
                type: integer
              snapshotHandle:
                description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                  on the underlying storage system. If not specified, it indicates
                  that dynamic snapshot creation has either failed or it is still
                  in progress.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/419
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: volumesnapshots.snapshot.storage.k8s.io
spec:
  group: snapshot.storage.k8s.io
  names:
    kind: VolumeSnapshot
    listKind: VolumeSnapshotList
    plural: volumesnapshots
    singular: volumesnapshot
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Indicates if the snapshot is ready to be used to restore a volume.
      jsonPath: .status.readyToUse
      name: ReadyToUse
      type: boolean
    - description: If a new snapshot needs to be created, this contains the name of
        the source PVC from which this snapshot was (or will be) created.
      jsonPath: .spec.source.persistentVolumeClaimName
      name: SourcePVC
      type: string
    - description: If a snapshot already exists, this contains the name of the existing
        VolumeSnapshotContent object representing the existing snapshot.
      jsonPath: .spec.source.volumeSnapshotContentName
      name: SourceSnapshotContent
      type: string
    - description: Represents the minimum size of volume required to rehydrate from
        this snapshot.
      jsonPath: .status.restoreSize
      name: RestoreSize
      type: string
    - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
      jsonPath: .spec.volumeSnapshotClassName
      name: SnapshotClass
      type: string
    - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot
        object intends to bind to. Please note that verification of binding actually
        requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure
        both are pointing at each other. Binding MUST be verified prior to usage of
        this object.
      jsonPath: .status.boundVolumeSnapshotContentName
      name: SnapshotContent
      type: string
    - description: Timestamp when the point-in-time snapshot was taken by the underlying
        storage system.
      jsonPath: .status.creationTime
      name: CreationTime
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshot is a user's request for either creating a point-in-time
          snapshot of a persistent volume, or binding to a pre-existing snapshot.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          spec:
            description: 'spec defines the desired characteristics of a snapshot requested
              by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
              Required.'
            properties:
              source:
                description: source specifies where a snapshot will be created from.
                  This field is immutable after creation. Required.
                oneOf:
                - required:
                  - persistentVolumeClaimName
                - required:
                  - volumeSnapshotContentName
                properties:
                  persistentVolumeClaimName:
                    description: persistentVolumeClaimName specifies the name of the
                      PersistentVolumeClaim object representing the volume from which
                      a snapshot should be created. This PVC is assumed to be in the
                      same namespace as the VolumeSnapshot object. This field should
                      be set if the snapshot does not exists, and needs to be created.
                      This field is immutable.
                    type: string
                  volumeSnapshotContentName:
                    description: volumeSnapshotContentName specifies the name of a
                      pre-existing VolumeSnapshotContent object representing an existing
                      volume snapshot. This field should be set if the snapshot already
                      exists and only needs a representation in Kubernetes. This field
                      is immutable.
                    type: string
                type: object
              volumeSnapshotClassName:
                description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass
                  requested by the VolumeSnapshot. VolumeSnapshotClassName may be
                  left nil to indicate that the default SnapshotClass should be used.
                  A given cluster may have multiple default Volume SnapshotClasses:
                  one default per CSI Driver. If a VolumeSnapshot does not specify
                  a SnapshotClass, VolumeSnapshotSource will be checked to figure
                  out what the associated CSI Driver is, and the default VolumeSnapshotClass
                  associated with that CSI Driver will be used. If more than one VolumeSnapshotClass
                  exist for a given CSI Driver and more than one have been marked
                  as default, CreateSnapshot will fail and generate an event. Empty
                  string is not allowed for this field.'
                type: string
            required:
            - source
            type: object
          status:
            description: status represents the current information of a snapshot.
              Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent
              objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent
              point at each other) before using this object.
            properties:
              boundVolumeSnapshotContentName:
                description: 'boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent
                  object to which this VolumeSnapshot object intends to bind to. If
                  not specified, it indicates that the VolumeSnapshot object has not
                  been successfully bound to a VolumeSnapshotContent object yet. NOTE:
                  To avoid possible security issues, consumers must verify binding
                  between VolumeSnapshot and VolumeSnapshotContent objects is successful
                  (by validating that both VolumeSnapshot and VolumeSnapshotContent
                  point at each other) before using this object.'
                type: string
              creationTime:
                description: creationTime is the timestamp when the point-in-time
                  snapshot is taken by the underlying storage system. In dynamic snapshot
                  creation case, this field will be filled in by the snapshot controller
                  with the "creation_time" value returned from CSI "CreateSnapshot"
                  gRPC call. For a pre-existing snapshot, this field will be filled
                  with the "creation_time" value returned from the CSI "ListSnapshots"
                  gRPC call if the driver supports it. If not specified, it may indicate
                  that the creation time of the snapshot is unknown.
                format: date-time
                type: string
              error:
                description: error is the last observed error during snapshot creation,
                  if any. This field could be helpful to upper level controllers(i.e.,
                  application controller) to decide whether they should continue on
                  waiting for the snapshot to be created based on the type of error
                  reported. The snapshot controller will keep retrying when an error
                  occurrs during the snapshot creation. Upon success, this error field
                  will be cleared.
                properties:
                  message:
                    description: 'message is a string detailing the encountered error
                      during snapshot creation if specified. NOTE: message may be
                      logged, and it should not contain sensitive information.'
                    type: string
                  time:
                    description: time is the timestamp when the error was encountered.
                    format: date-time
                    type: string
                type: object
              readyToUse:
                description: readyToUse indicates if the snapshot is ready to be used
                  to restore a volume. In dynamic snapshot creation case, this field
                  will be filled in by the snapshot controller with the "ready_to_use"
                  value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "ready_to_use" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it, otherwise, this field will be set to "True". If not specified,
                  it means the readiness of a snapshot is unknown.
                type: boolean
              restoreSize:
                description: restoreSize represents the minimum size of volume required
                  to create a volume from this snapshot. In dynamic snapshot creation
                  case, this field will be filled in by the snapshot controller with
                  the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call.
                  For a pre-existing snapshot, this field will be filled with the
                  "size_bytes" value returned from the CSI "ListSnapshots" gRPC call
                  if the driver supports it. When restoring a volume from this snapshot,
                  the size of the volume MUST NOT be smaller than the restoreSize
                  if it is specified, otherwise the restoration will fail. If not
                  specified, it indicates that the size is unknown.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                type: string
                x-kubernetes-int-or-string: true
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Indicates if the snapshot is ready to be used to restore a volume.
      jsonPath: .status.readyToUse
      name: ReadyToUse
      type: boolean
    - description: If a new snapshot needs to be created, this contains the name of
        the source PVC from which this snapshot was (or will be) created.
      jsonPath: .spec.source.persistentVolumeClaimName
      name: SourcePVC
      type: string
    - description: If a snapshot already exists, this contains the name of the existing
        VolumeSnapshotContent object representing the existing snapshot.
      jsonPath: .spec.source.volumeSnapshotContentName
      name: SourceSnapshotContent
      type: string
    - description: Represents the minimum size of volume required to rehydrate from
        this snapshot.
      jsonPath: .status.restoreSize
      name: RestoreSize
      type: string
    - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
      jsonPath: .spec.volumeSnapshotClassName
      name: SnapshotClass
      type: string
    - description: Name of the VolumeSnapshotContent object to which the VolumeSnapshot
        object intends to bind to. Please note that verification of binding actually
        requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure
        both are pointing at each other. Binding MUST be verified prior to usage of
        this object.
      jsonPath: .status.boundVolumeSnapshotContentName
      name: SnapshotContent
      type: string
    - description: Timestamp when the point-in-time snapshot was taken by the underlying
        storage system.
      jsonPath: .status.creationTime
      name: CreationTime
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: snapshot.storage.k8s.io/v1beta1 VolumeSnapshot is deprecated;
      use snapshot.storage.k8s.io/v1 VolumeSnapshot
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VolumeSnapshot is a user's request for either creating a point-in-time
          snapshot of a persistent volume, or binding to a pre-existing snapshot.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          spec:
            description: 'spec defines the desired characteristics of a snapshot requested
              by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
              Required.'
            properties:
              source:
                description: source specifies where a snapshot will be created from.
                  This field is immutable after creation. Required.
                properties:
                  persistentVolumeClaimName:
                    description: persistentVolumeClaimName specifies the name of the
                      PersistentVolumeClaim object representing the volume from which
                      a snapshot should be created. This PVC is assumed to be in the
                      same namespace as the VolumeSnapshot object. This field should
                      be set if the snapshot does not exists, and needs to be created.
                      This field is immutable.
                    type: string
                  volumeSnapshotContentName:
                    description: volumeSnapshotContentName specifies the name of a
                      pre-existing VolumeSnapshotContent object representing an existing
                      volume snapshot. This field should be set if the snapshot already
                      exists and only needs a representation in Kubernetes. This field
                      is immutable.
                    type: string
                type: object
              volumeSnapshotClassName:
                description: 'VolumeSnapshotClassName is the name of the VolumeSnapshotClass
                  requested by the VolumeSnapshot. VolumeSnapshotClassName may be
                  left nil to indicate that the default SnapshotClass should be used.
                  A given cluster may have multiple default Volume SnapshotClasses:
                  one default per CSI Driver. If a VolumeSnapshot does not specify
                  a SnapshotClass, VolumeSnapshotSource will be checked to figure
                  out what the associated CSI Driver is, and the default VolumeSnapshotClass
                  associated with that CSI Driver will be used. If more than one VolumeSnapshotClass
                  exist for a given CSI Driver and more than one have been marked
                  as default, CreateSnapshot will fail and generate an event. Empty
                  string is not allowed for this field.'
                type: string
            required:
            - source
            type: object
          status:
            description: status represents the current information of a snapshot.
              Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent
              objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent
              point at each other) before using this object.
            properties:
              boundVolumeSnapshotContentName:
                description: 'boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent
                  object to which this VolumeSnapshot object intends to bind to. If
                  not specified, it indicates that the VolumeSnapshot object has not
                  been successfully bound to a VolumeSnapshotContent object yet. NOTE:
                  To avoid possible security issues, consumers must verify binding
                  between VolumeSnapshot and VolumeSnapshotContent objects is successful
                  (by validating that both VolumeSnapshot and VolumeSnapshotContent
                  point at each other) before using this object.'
                type: string
              creationTime:
                description: creationTime is the timestamp when the point-in-time
                  snapshot is taken by the underlying storage system. In dynamic snapshot
                  creation case, this field will be filled in by the snapshot controller
                  with the "creation_time" value returned from CSI "CreateSnapshot"
                  gRPC call. For a pre-existing snapshot, this field will be filled
                  with the "creation_time" value returned from the CSI "ListSnapshots"
                  gRPC call if the driver supports it. If not specified, it may indicate
                  that the creation time of the snapshot is unknown.
                format: date-time
                type: string
              error:
                description: error is the last observed error during snapshot creation,
                  if any. This field could be helpful to upper level controllers(i.e.,
                  application controller) to decide whether they should continue on
                  waiting for the snapshot to be created based on the type of error
                  reported. The snapshot controller will keep retrying when an error
                  occurrs during the snapshot creation. Upon success, this error field
                  will be cleared.
                properties:
                  message:
                    description: 'message is a string detailing the encountered error
                      during snapshot creation if specified. NOTE: message may be
                      logged, and it should not contain sensitive information.'
                    type: string
                  time:
                    description: time is the timestamp when the error was encountered.
                    format: date-time
                    type: string
                type: object
              readyToUse:
                description: readyToUse indicates if the snapshot is ready to be used
                  to restore a volume. In dynamic snapshot creation case, this field
                  will be filled in by the snapshot controller with the "ready_to_use"
                  value returned from CSI "CreateSnapshot" gRPC call. For a pre-existing
                  snapshot, this field will be filled with the "ready_to_use" value
                  returned from the CSI "ListSnapshots" gRPC call if the driver supports
                  it, otherwise, this field will be set to "True". If not specified,
                  it means the readiness of a snapshot is unknown.
                type: boolean
              restoreSize:
                description: restoreSize represents the minimum size of volume required
                  to create a volume from this snapshot. In dynamic snapshot creation
                  case, this field will be filled in by the snapshot controller with
                  the "size_bytes" value returned from CSI "CreateSnapshot" gRPC call.
                  For a pre-existing snapshot, this field will be filled with the
                  "size_bytes" value returned from the CSI "ListSnapshots" gRPC call
                  if the driver supports it. When restoring a volume from this snapshot,
                  the size of the volume MUST NOT be smaller than the restoreSize
                  if it is specified, otherwise the restoration will fail. If not
                  specified, it indicates that the size is unknown.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                type: string
                x-kubernetes-int-or-string: true
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: snapshot-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-controller-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-node-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-controller-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-node-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-controller-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-node-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: snapshot-controller-leaderelection
  namespace: kube-system
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: snapshot-controller-runner
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents/status
  verbs:
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots/status
  verbs:
  - update
  - patch
- apiGroups:
  - groupsnapshot.storage.k8s.io
  resources:
  - volumegroupsnapshotclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - groupsnapshot.storage.k8s.io
  resources:
  - volumegroupsnapshotcontents
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - groupsnapshot.storage.k8s.io
  resources:
  - volumegroupsnapshotcontents/status
  verbs:
  - patch
- apiGroups:
  - groupsnapshot.storage.k8s.io
  resources:
  - volumegroupsnapshots
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - groupsnapshot.storage.k8s.io
  resources:
  - volumegroupsnapshots/status
  verbs:
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-controller-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csidrivers
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-node-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-controller-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csidrivers
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-node-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-controller-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csidrivers
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-node-cr
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: snapshot-controller-leaderelection
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: snapshot-controller-leaderelection
subjects:
- kind: ServiceAccount
  name: snapshot-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: snapshot-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: snapshot-controller-runner
subjects:
- kind: ServiceAccount
  name: snapshot-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-controller-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-iscsi-democratic-csi-controller-cr
subjects:
- kind: ServiceAccount
  name: zfs-iscsi-democratic-csi-controller-sa
  namespace: democratic-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-node-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-iscsi-democratic-csi-node-cr
subjects:
- kind: ServiceAccount
  name: zfs-iscsi-democratic-csi-node-sa
  namespace: democratic-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-controller-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-nfs-democratic-csi-controller-cr
subjects:
- kind: ServiceAccount
  name: zfs-nfs-democratic-csi-controller-sa
  namespace: democratic-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-node-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-nfs-democratic-csi-node-cr
subjects:
- kind: ServiceAccount
  name: zfs-nfs-democratic-csi-node-sa
  namespace: democratic-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-controller-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-nfs-spitfire-fast-democratic-csi-controller-cr
subjects:
- kind: ServiceAccount
  name: zfs-nfs-spitfire-fast-democratic-csi-controller-sa
  namespace: democratic-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-node-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zfs-nfs-spitfire-fast-democratic-csi-node-cr
subjects:
- kind: ServiceAccount
  name: zfs-nfs-spitfire-fast-democratic-csi-node-sa
  namespace: democratic-csi
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-expand-secret-freenas-iscsi-csi-zfs-iscsi-democratic
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-expand-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-expand-secret-truenas-nfs-spitfire-fast-zfs-nfs-spit
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-publish-secret-freenas-iscsi-csi-zfs-iscsi-democrati
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-publish-secret-freenas-nfs-csi-zfs-nfs-democratic-cs
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: controller-publish-secret-truenas-nfs-spitfire-fast-zfs-nfs-spi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-publish-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-publish-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-publish-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-stage-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-stage-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: node-stage-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire-fa
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: provisioner-secret-freenas-iscsi-csi-zfs-iscsi-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: provisioner-secret-freenas-nfs-csi-zfs-nfs-democratic-csi
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: provisioner-secret-truenas-nfs-spitfire-fast-zfs-nfs-spitfire-f
stringData: null
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-driver-config
stringData:
  driver-config-file.yaml: |-
    driver: freenas-iscsi
    httpConnection:
      allowInsecure: true
      apiKey: redacted
      apiVersion: 2
      host: spitfire.235.tdude.co
      port: 443
      protocol: https
      username: root
    instance_id: null
    iscsi:
      extentAvailThreshold: 0
      extentBlocksize: 4096
      extentDisablePhysicalBlocksize: true
      extentInsecureTpc: true
      extentRpm: "7200"
      extentXenCompat: false
      interface: null
      namePrefix: csi-
      nameSuffix: -cluster
      targetGroups:
      - targetGroupAuthGroup: null
        targetGroupAuthType: None
        targetGroupInitiatorGroup: 1
        targetGroupPortalGroup: 1
      targetPortal: spitfire.storage.235.tdude.co:3260
      targetPortals: []
    sshConnection:
      host: spitfire.235.tdude.co
      port: 22
      privateKey: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        ...
        -----END OPENSSH PRIVATE KEY-----
      username: root
    zfs:
      cli:
        paths:
          zfs: /usr/sbin/zfs
          zpool: /usr/sbin/zpool
          sudo: /usr/bin/sudo
          chroot: /usr/sbin/chroot
      datasetParentName: spitfire/k8s-235/volumes
      detachedSnapshotsDatasetParentName: spitfire/k8s-235/snapshots
      zvolBlocksize: 16K
      zvolCompression: ""
      zvolDedup: ""
      zvolEnableReservation: false
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-driver-config
  isClusterScoped: false
stringData:
  driver-config-file.yaml: |-
    driver: freenas-nfs
    httpConnection:
      allowInsecure: true
      apiKey: redacted
      apiVersion: 2
      host: spitfire.235.tdude.co
      port: 443
      protocol: https
      username: root
    instance_id: null
    nfs:
      shareAlldirs: false
      shareAllowedHosts:
      - 2a10:4741:36:28:26be:5ff:fe84:d8b0
      - 2a10:4741:36:28:26be:5ff:fe84:f750
      - 2a10:4741:36:28:202:c9ff:fe9d:c36a
      - 2607:fa48:6ed8:8a55:26be:5ff:fe84:d8b0
      - 2607:fa48:6ed8:8a55:26be:5ff:fe84:f750
      - 2607:fa48:6ed8:8a55:202:c9ff:fe9d:c36a
      shareAllowedNetworks: []
      shareHost: spitfire.storage.235.tdude.co
      shareMapallGroup: ""
      shareMapallUser: ""
      shareMaprootGroup: wheel
      shareMaprootUser: root
    sshConnection:
      host: spitfire.235.tdude.co
      port: 22
      privateKey: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        ...
        -----END OPENSSH PRIVATE KEY-----
      username: root
    zfs:
      datasetEnableQuotas: true
      datasetEnableReservation: false
      datasetParentName: spitfire/k8s-235/volumes
      datasetPermissionsGroup: wheel
      datasetPermissionsMode: "0777"
      datasetPermissionsUser: root
      detachedSnapshotsDatasetParentName: spitfire/k8s-235/snapshots
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-driver-config
stringData:
  driver-config-file.yaml: |-
    driver: freenas-nfs
    httpConnection:
      allowInsecure: true
      apiKey: redacted
      apiVersion: 2
      host: spitfire.235.tdude.co
      port: 443
      protocol: https
      username: root
    instance_id: null
    nfs:
      shareAlldirs: false
      shareAllowedHosts:
      - 2a10:4741:36:28:26be:5ff:fe84:d8b0
      - 2a10:4741:36:28:26be:5ff:fe84:f750
      - 2a10:4741:36:28:202:c9ff:fe9d:c36a
      - 2607:fa48:6ed8:8a55:26be:5ff:fe84:d8b0
      - 2607:fa48:6ed8:8a55:26be:5ff:fe84:f750
      - 2607:fa48:6ed8:8a55:202:c9ff:fe9d:c36a
      shareAllowedNetworks: []
      shareHost: spitfire.storage.235.tdude.co
      shareMapallGroup: ""
      shareMapallUser: ""
      shareMaprootGroup: wheel
      shareMaprootUser: root
    sshConnection:
      host: spitfire.235.tdude.co
      port: 22
      privateKey: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        ...
        -----END OPENSSH PRIVATE KEY-----
      username: root
    zfs:
      datasetEnableQuotas: true
      datasetEnableReservation: false
      datasetParentName: spitfire/k8s-235/volumes
      datasetPermissionsGroup: wheel
      datasetPermissionsMode: "0777"
      datasetPermissionsUser: root
      detachedSnapshotsDatasetParentName: spitfire/k8s-235/snapshots
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapshot-controller
  namespace: kube-system
spec:
  minReadySeconds: 15
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: snapshot-controller
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snapshot-controller
    spec:
      containers:
      - args:
        - --v=5
        - --leader-election=true
        image: registry.k8s.io/sig-storage/snapshot-controller:v6.3.1
        imagePullPolicy: IfNotPresent
        name: snapshot-controller
      serviceAccountName: snapshot-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/csi-role: controller
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-iscsi
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 3267420e2dec67fecc949473e39bb8cb184782e9a2dd94e83f51b3aab93d52b5
      labels:
        app.kubernetes.io/csi-role: controller
        app.kubernetes.io/instance: zfs-iscsi
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --extra-create-metadata
        - --csi-address=/csi-data/csi.sock
        - --volume-name-uuid-length=16
        image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
        name: external-provisioner
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --workers=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0
        name: external-resizer
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
        name: external-snapshotter
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.iscsi
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=controller
        - --server-socket=/csi-data/csi.sock
        env: null
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /config
          name: config
      hostAliases: []
      hostIPC: false
      hostNetwork: false
      serviceAccount: zfs-iscsi-democratic-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
      - name: config
        secret:
          secretName: zfs-iscsi-democratic-csi-driver-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/csi-role: controller
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-nfs
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 662a8c4d47e04cc4fc638804a27a43becf04a5f13d762eaecbacbd3212b203c9
      labels:
        app.kubernetes.io/csi-role: controller
        app.kubernetes.io/instance: zfs-nfs
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --extra-create-metadata
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
        name: external-provisioner
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --workers=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0
        name: external-resizer
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
        name: external-snapshotter
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.nfs
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=controller
        - --server-socket=/csi-data/csi.sock
        env: null
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /config
          name: config
      hostAliases: []
      hostIPC: false
      hostNetwork: false
      serviceAccount: zfs-nfs-democratic-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
      - name: config
        secret:
          secretName: zfs-nfs-democratic-csi-driver-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/csi-role: controller
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-nfs-spitfire-fast
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 950c4a4e1a998a8ef3ded83a291d21d10070792ad851c4a46a3d08f0a0eede07
      labels:
        app.kubernetes.io/csi-role: controller
        app.kubernetes.io/instance: zfs-nfs-spitfire-fast
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --extra-create-metadata
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
        name: external-provisioner
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --workers=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0
        name: external-resizer
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --v=5
        - --leader-election
        - --leader-election-namespace=democratic-csi
        - --timeout=90s
        - --worker-threads=10
        - --csi-address=/csi-data/csi.sock
        image: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3
        name: external-snapshotter
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.nfs-spitfire-fast
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=controller
        - --server-socket=/csi-data/csi.sock
        env: null
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /config
          name: config
      hostAliases: []
      hostIPC: false
      hostNetwork: false
      serviceAccount: zfs-nfs-spitfire-fast-democratic-csi-controller-sa
      volumes:
      - emptyDir: {}
        name: socket-dir
      - name: config
        secret:
          secretName: zfs-nfs-spitfire-fast-democratic-csi-driver-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/csi-role: node
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-iscsi-democratic-csi-node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-iscsi
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 3267420e2dec67fecc949473e39bb8cb184782e9a2dd94e83f51b3aab93d52b5
      labels:
        app.kubernetes.io/csi-role: node
        app.kubernetes.io/instance: zfs-iscsi
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.iscsi
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=node
        - --server-socket=/csi-data/csi.sock
        env:
        - name: CSI_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        terminationMessagePath: /tmp/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /etc/iscsi
          mountPropagation: Bidirectional
          name: iscsi-dir
        - mountPath: /var/lib/iscsi
          mountPropagation: Bidirectional
          name: iscsi-info
        - mountPath: /lib/modules
          name: modules-dir
          readOnly: true
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /run/udev
          name: udev-data
        - mountPath: /host
          mountPropagation: Bidirectional
          name: host-dir
        - mountPath: /sys
          name: sys-dir
        - mountPath: /dev
          name: dev-dir
        - mountPath: /config
          name: config
      - args:
        - --v=5
        - --csi-address=/csi-data/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/org.democratic-csi.iscsi/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
        name: driver-registrar
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - while true; do sleep 2; done;
        command:
        - /bin/sh
        - -c
        - --
        image: docker.io/busybox:1.32.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /plugins/org.democratic-csi.iscsi /registration/org.democratic-csi.iscsi-reg.sock
        name: cleanup
        volumeMounts:
        - mountPath: /plugins
          name: plugins-dir
        - mountPath: /registration
          name: registration-dir
      hostAliases: []
      hostIPC: true
      hostNetwork: true
      serviceAccount: zfs-iscsi-democratic-csi-node-sa
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/org.democratic-csi.iscsi
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /etc/iscsi
          type: Directory
        name: iscsi-dir
      - hostPath:
          path: /var/lib/iscsi
        name: iscsi-info
      - hostPath:
          path: /dev
          type: Directory
        name: dev-dir
      - hostPath:
          path: /lib/modules
        name: modules-dir
      - hostPath:
          path: /etc/localtime
        name: localtime
      - hostPath:
          path: /run/udev
        name: udev-data
      - hostPath:
          path: /sys
          type: Directory
        name: sys-dir
      - hostPath:
          path: /
          type: Directory
        name: host-dir
      - name: config
        secret:
          secretName: zfs-iscsi-democratic-csi-driver-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/csi-role: node
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-democratic-csi-node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-nfs
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 662a8c4d47e04cc4fc638804a27a43becf04a5f13d762eaecbacbd3212b203c9
      labels:
        app.kubernetes.io/csi-role: node
        app.kubernetes.io/instance: zfs-nfs
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.nfs
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=node
        - --server-socket=/csi-data/csi.sock
        env:
        - name: CSI_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        terminationMessagePath: /tmp/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /lib/modules
          name: modules-dir
          readOnly: true
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /run/udev
          name: udev-data
        - mountPath: /host
          mountPropagation: Bidirectional
          name: host-dir
        - mountPath: /sys
          name: sys-dir
        - mountPath: /dev
          name: dev-dir
        - mountPath: /config
          name: config
      - args:
        - --v=5
        - --csi-address=/csi-data/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/org.democratic-csi.nfs/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
        name: driver-registrar
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - while true; do sleep 2; done;
        command:
        - /bin/sh
        - -c
        - --
        image: docker.io/busybox:1.32.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /plugins/org.democratic-csi.nfs /registration/org.democratic-csi.nfs-reg.sock
        name: cleanup
        volumeMounts:
        - mountPath: /plugins
          name: plugins-dir
        - mountPath: /registration
          name: registration-dir
      hostAliases: []
      hostIPC: true
      hostNetwork: true
      serviceAccount: zfs-nfs-democratic-csi-node-sa
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/org.democratic-csi.nfs
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /dev
          type: Directory
        name: dev-dir
      - hostPath:
          path: /lib/modules
        name: modules-dir
      - hostPath:
          path: /etc/localtime
        name: localtime
      - hostPath:
          path: /run/udev
        name: udev-data
      - hostPath:
          path: /sys
          type: Directory
        name: sys-dir
      - hostPath:
          path: /
          type: Directory
        name: host-dir
      - name: config
        secret:
          secretName: zfs-nfs-democratic-csi-driver-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/csi-role: node
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: zfs-nfs-spitfire-fast-democratic-csi-node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: zfs-nfs-spitfire-fast
      app.kubernetes.io/name: democratic-csi
  template:
    metadata:
      annotations:
        checksum/secret: 950c4a4e1a998a8ef3ded83a291d21d10070792ad851c4a46a3d08f0a0eede07
      labels:
        app.kubernetes.io/csi-role: node
        app.kubernetes.io/instance: zfs-nfs-spitfire-fast
        app.kubernetes.io/name: democratic-csi
    spec:
      containers:
      - args:
        - --csi-version=1.2.0
        - --csi-name=org.democratic-csi.nfs-spitfire-fast
        - --driver-config-file=/config/driver-config-file.yaml
        - --log-level=info
        - --csi-mode=node
        - --server-socket=/csi-data/csi.sock
        env:
        - name: CSI_NODE_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: docker.io/democraticcsi/democratic-csi:latest
        livenessProbe:
          exec:
            command:
            - bin/liveness-probe
            - --csi-version=1.2.0
            - --csi-address=/csi-data/csi.sock
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 3
        name: csi-driver
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        terminationMessagePath: /tmp/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /lib/modules
          name: modules-dir
          readOnly: true
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /run/udev
          name: udev-data
        - mountPath: /host
          mountPropagation: Bidirectional
          name: host-dir
        - mountPath: /sys
          name: sys-dir
        - mountPath: /dev
          name: dev-dir
        - mountPath: /config
          name: config
      - args:
        - --v=5
        - --csi-address=/csi-data/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/org.democratic-csi.nfs-spitfire-fast/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
        name: driver-registrar
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - while true; do sleep 2; done;
        command:
        - /bin/sh
        - -c
        - --
        image: docker.io/busybox:1.32.0
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /plugins/org.democratic-csi.nfs-spitfire-fast /registration/org.democratic-csi.nfs-spitfire-fast-reg.sock
        name: cleanup
        volumeMounts:
        - mountPath: /plugins
          name: plugins-dir
        - mountPath: /registration
          name: registration-dir
      hostAliases: []
      hostIPC: true
      hostNetwork: true
      serviceAccount: zfs-nfs-spitfire-fast-democratic-csi-node-sa
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/org.democratic-csi.nfs-spitfire-fast
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /dev
          type: Directory
        name: dev-dir
      - hostPath:
          path: /lib/modules
        name: modules-dir
      - hostPath:
          path: /etc/localtime
        name: localtime
      - hostPath:
          path: /run/udev
        name: udev-data
      - hostPath:
          path: /sys
          type: Directory
        name: sys-dir
      - hostPath:
          path: /
          type: Directory
        name: host-dir
      - name: config
        secret:
          secretName: zfs-nfs-spitfire-fast-democratic-csi-driver-config
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: zfs-iscsi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: org.democratic-csi.iscsi
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: org.democratic-csi.nfs
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: zfs-nfs-spitfire-fast
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: democratic-csi
    helm.sh/chart: democratic-csi-0.8.3
  name: org.democratic-csi.nfs-spitfire-fast
spec:
  attachRequired: false
  podInfoOnMount: true

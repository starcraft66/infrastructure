---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qbittorrent
  labels:
    app.kubernetes.io/name: qbittorrent
spec:
  serviceName: "qbittorrent"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: qbittorrent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qbittorrent
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: qbittorrent
      containers:
      - name: qbittorrent
        image: ghcr.io/linuxserver/qbittorrent:latest
        imagePullPolicy: Always
        ports:
        - name: "http"
          containerPort: 8080
          protocol: TCP
        - name: "bt-tcp"
          containerPort: 55324
          protocol: TCP
        - name: "bt-udp"
          containerPort: 55324
          protocol: UDP
        volumeMounts:
        - name: qbittorrent-config
          mountPath: /config
        - name: data
          mountPath: /downloads
          subPath: torrents
        envFrom:
        - configMapRef:
            name: mediaserver-permissions
        resources:
          requests:
            cpu: "0.5"
            memory: "3Gi"
          limits:
            memory: "8Gi"
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 8080
#          periodSeconds: 30
#          failureThreshold: 3
#        livenessProbe:
#          httpGet:
#            path: /
#            port: 8080
#          initialDelaySeconds: 120
#          periodSeconds: 30
#          failureThreshold: 5
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: "kube-plex-data"
      - name: qbittorrent-config
        persistentVolumeClaim:
          claimName: qbittorrent-config

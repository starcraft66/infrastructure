---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
spec:
  serviceName: "jellyfin"
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: jellyfin
      hostname: "jellyfin"
      containers:
      - name: jellyfin
        image: "ghcr.io/jellyfin/jellyfin:2025031705"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 10
        ports:
        - name: http
          containerPort: 8096
          protocol: TCP
        - name: dlna
          containerPort: 1900
          protocol: UDP
        volumeMounts:
        - name: media
          mountPath: /media
        - name: cache
          mountPath: /cache
        - name: config
          mountPath: /config
        resources:
          {}
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: "jellyfin-media"
      - name: cache
        persistentVolumeClaim:
          claimName: "jellyfin-cache"
      - name: config
        persistentVolumeClaim:
          claimName: "jellyfin-config"
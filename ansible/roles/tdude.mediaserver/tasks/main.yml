---

- name: Create media server group
  group:
    name: mediaserver
    state: present
    gid: 949

- name: Create media server user
  user:
    name: mediaserver
    password: "!"
    update_password: on_create
    group: mediaserver
    uid: 949
    state: present
    shell: /bin/bash
    system: yes
    createhome: yes
    home: /home/mediaserver

- name: Create the mediaserver folders
  file:
    name: "{{ item }}"
    state: directory
    owner: mediaserver
    group: mediaserver
    mode: 0770
  with_items:
    - "{{ mediaserver_installation_folder }}"
    - "{{ mediaserver_plex_media_folder }}"
    - "{{ mediaserver_deluge_config_folder }}"
    - "{{ mediaserver_jackett_config_folder }}"
    - "{{ mediaserver_sonarr_config_folder }}"
    - "{{ mediaserver_radarr_config_folder }}"
    - "{{ mediaserver_plex_config_folder }}"
    - "{{ mediaserver_plex_transcode_folder }}"
    - "{{ mediaserver_tautulli_config_folder }}"
    - "{{ mediaserver_varken_config_folder }}"

- name: Install the jackett config
  template:
    src: "jackett.j2"
    dest: "{{ mediaserver_installation_folder }}/jackett/Jackett/ServerConfig.json"
    mode: 0660
    owner: mediaserver
    group: mediaserver
  notify: restart jackett

- name: Install the radarr config
  template:
    src: "radarr.j2"
    dest: "{{ mediaserver_installation_folder }}/radarr/config.xml"
    mode: 0660
    owner: mediaserver
    group: mediaserver
  notify: restart radarr

- name: Install the sonarr config
  template:
    src: "sonarr.j2"
    dest: "{{ mediaserver_installation_folder }}/sonarr/config.xml"
    mode: 0660
    owner: mediaserver
    group: mediaserver
  notify: restart sonarr

- name: Install the tautulli config
  template:
    src: "tautulli.j2"
    dest: "{{ mediaserver_tautulli_config_folder }}/config.ini"
    mode: 0660
    owner: mediaserver
    group: mediaserver
  notify: restart tautulli

- name: Install the varken config
  template:
    src: "varken.j2"
    dest: "{{ mediaserver_varken_config_folder }}/varken.ini"
    mode: 0660
    owner: mediaserver
    group: mediaserver
  notify: restart varken

- name: Install the production compose file
  template:
    src: "docker-compose.yml.j2"
    dest: "{{ mediaserver_installation_folder }}/docker-compose.yml"
    mode: 0660
    owner: mediaserver
    group: mediaserver

- name: Get InfluxDB IP address
  command: "{% raw %}docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' monitoring_influxdb{% endraw %}"
  register: influxdb_ip

- name: Create varken InfluxDB database
  influxdb_database:
    use_udp: no
    udp_port: 4444 # https://github.com/ansible-collections/community.general/issues/244
    hostname: "{{ influxdb_ip.stdout }}"
    username: "{{ influxdb_admin_user }}"
    password: "{{ influxdb_admin_password }}"
    database_name: "{{ mediaserver_varken_influxdb_database_name }}"

- name: Create varken InfluxDB user
  influxdb_user:
    use_udp: no
    udp_port: 4444 # https://github.com/ansible-collections/community.general/issues/244
    hostname: "{{ influxdb_ip.stdout }}"
    user_name: "{{ mediaserver_varken_influxdb_username }}"
    user_password: "{{ mediaserver_varken_influxdb_password }}"
    login_username: "{{ influxdb_admin_user }}"
    login_password: "{{ influxdb_admin_password }}"
    grants:
      - database: "{{ mediaserver_varken_influxdb_database_name }}"
        privilege: "ALL"

- name: Create the mediaserver network
  docker_network:
    name: mediaserver
    state: present

- name: Update the docker service
  docker_compose:
    project_src: "{{ mediaserver_installation_folder }}"
    files: docker-compose.yml
    state: present
    recreate: smart
    pull: yes
    remove_orphans: yes
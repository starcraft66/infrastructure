version: '2'
services:
  prometheus:
    image: prom/prometheus:{{ prometheus_docker_version }}
    container_name: monitoring_prometheus
    volumes:
      - "{{ prometheus_data_folder }}:/prometheus"
      - "{{ prometheus_config_folder }}:/etc/prometheus"
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    user: "945:945"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.sapling.tdude.co`)"
      - "traefik.http.routers.prometheus.middlewares=https@file,fwauth@file"
      - "traefik.docker.network=monitoring"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.entryPoints=web,web-secure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=le"
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:{{ grafana_docker_version }}
    container_name: monitoring_grafana
    environment:
      GF_SERVER_HTTP_PORT: 3000
      GF_SERVER_HTTP_PROTOCOL: http
      GF_SERVER_DOMAIN: grafana.sapling.tdude.co
      GF_SERVER_ROOT_URL: https://grafana.sapling.tdude.co/
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_NAME: "anonymous"
      TZ: "Europe/Paris"
    volumes:
      - "{{ grafana_data_folder }}:/var/lib/grafana"
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    user: "942:942"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.sapling.tdude.co`)"
      - "traefik.http.routers.grafana.middlewares=https@file"
      - "traefik.docker.network=monitoring"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.entryPoints=web,web-secure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=le"
    restart: unless-stopped
    networks:
      - monitoring
  cadvisor:
    image: google/cadvisor:{{ cadvisor_docker_version }}
    container_name: monitoring_cadvisor
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.sapling.tdude.co`)"
      - "traefik.http.routers.cadvisor.middlewares=https@file,fwauth@file"
      - "traefik.docker.network=monitoring"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.routers.cadvisor.entryPoints=web,web-secure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.tls.certresolver=le"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
    networks:
      - monitoring
  redis:
    image: redis:{{ cadvisor_redis_docker_version }}
    restart: unless-stopped
    container_name: monitoring_redis
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - monitoring
  influxdb:
    image: influxdb:{{ influxdb_docker_version }}
    container_name: monitoring_influxdb
    restart: unless-stopped
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "{{ influxdb_auth_enabled }}"
      INFLUXDB_ADMIN_USER: "{{ influxdb_admin_user }}"
      INFLUXDB_ADMIN_PASSWORD: "{{ influxdb_admin_password }}"
    volumes:
      - "{{ influxdb_data_folder }}:/var/lib/influxdb"
    networks:
      - monitoring

networks:
  monitoring:
    external:
      name: monitoring
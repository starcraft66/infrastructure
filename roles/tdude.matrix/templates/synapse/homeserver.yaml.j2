# vim:ft=yaml

## TLS ##

{% if not matrix_synapse_no_tls %}

tls_certificate_path: "/data/{{ matrix_synapse_server_name }}.tls.crt"
tls_private_key_path: "/data/{{ matrix_synapse_server_name }}.tls.key"

{% if matrix_synapse_acme %}
acme:
    enabled: true
    port: 8009
{% endif %}

{% endif %}

## Server ##

server_name: "{{ matrix_synapse_server_name }}"
public_baseurl: "{{ matrix_public_baseurl }}"
pid_file: /homeserver.pid
web_client: False
soft_file_limit: 0
log_config: "/data/config.logging"

## Ports ##

listeners:
  {% if not matrix_synapse_no_tls %}
  -
    port: 8448
    bind_addresses: ['::']
    type: http
    tls: true
    x_forwarded: false
    resources:
      - names: [client]
        compress: true
      - names: [federation]  # Federation APIs
        compress: false
  {% endif %}

  - port: 8008
    tls: false
    bind_addresses: ['::', '0.0.0.0']
    type: http
{% if not matrix_synapse_no_tls %}
    x_forwarded: false
{% else %}
    x_forwarded: true
{% endif %}

    resources:
      - names: [client]
        compress: true
      - names: [federation]
        compress: false
  
  - port: 8009
    tls: false
    bind_addresses: ['0.0.0.0']
    type: metrics

## Database ##

{% if matrix_synapse_postgres_password %}
database:
  name: "psycopg2"
  args:
    user: "{{ matrix_synapse_postgres_user or "synapse" }}"
    password: "{{ matrix_synapse_postgres_password }}"
    database: "{{ matrix_synapse_postgres_db or "synapse" }}"
    host: "{{ matrix_synapse_postgres_host or "db" }}"
    port: "{{ matrix_synapse_postgres_port or "5432" }}"
    cp_min: 5
    cp_max: 10
{% else %}
database:
  name: "sqlite3"
  args:
    database: "/data/homeserver.db"
{% endif %}

## Performance ##

event_cache_size: "{{ matrix_synapse_event_cache_size or "10K" }}"

## Ratelimiting ##

rc_messages_per_second: 0.2
rc_message_burst_count: 10.0
federation_rc_window_size: 1000
federation_rc_sleep_limit: 10
federation_rc_sleep_delay: 500
federation_rc_reject_limit: 50
federation_rc_concurrent: 3

## Files ##

media_store_path: "/data/media"
uploads_path: "/data/uploads"
max_upload_size: "{{ matrix_synapse_max_upload_size or "10M" }}"
max_image_pixels: "32M"
dynamic_thumbnails: false

# List of thumbnail to precalculate when an image is uploaded.
thumbnail_sizes:
- width: 32
  height: 32
  method: crop
- width: 96
  height: 96
  method: crop
- width: 320
  height: 240
  method: scale
- width: 640
  height: 480
  method: scale
- width: 800
  height: 600
  method: scale

url_preview_enabled: True
url_preview_ip_range_blacklist:
 - '127.0.0.0/8'
 - '10.0.0.0/8'
 - '172.16.0.0/12'
 - '192.168.0.0/16'
 - '100.64.0.0/10'
 - '169.254.0.0/16'
max_spider_size: "10M"

## Captcha ##

{% if matrix_synapse_recaptcha_public_key %}
recaptcha_public_key: "{{ matrix_synapse_recaptcha_public_key }}"
recaptcha_private_key: "{{ matrix_synapse_recaptcha_private_key }}"
enable_registration_captcha: True
recaptcha_siteverify_api: "https://www.google.com/recaptcha/api/siteverify"
{% else %}
recaptcha_public_key: "YOUR_PUBLIC_KEY"
recaptcha_private_key: "YOUR_PRIVATE_KEY"
enable_registration_captcha: False
recaptcha_siteverify_api: "https://www.google.com/recaptcha/api/siteverify"
{% endif %}

## Turn ##

{% if matrix_synapse_turn_uris %}
turn_uris:
{% for uri in matrix_synapse_turn_uris %}    - "{{ uri }}"
{% endfor %}
turn_shared_secret: "{{ matrix_synapse_turn_secret }}"
turn_user_lifetime: "1h"
turn_allow_guests: True
{% else %}
turn_uris: []
turn_shared_secret: "YOUR_SHARED_SECRET"
turn_user_lifetime: "1h"
turn_allow_guests: True
{% endif %}

## Registration ##

enable_registration: {{ "True" if matrix_synapse_enable_registration else "False" }}
registration_shared_secret: "{{ matrix_synapse_registration_shared_secret }}"
bcrypt_rounds: 12
allow_guest_access: {{ "True" if matrix_synapse_allow_guest else "False" }}
enable_group_creation: true

# The list of identity servers trusted to verify third party
# identifiers by this server.
#
# Also defines the ID server which will be called when an account is
# deactivated (one will be picked arbitrarily).
trusted_third_party_id_servers:
    - matrix.org
    - vector.im

## Metrics ###

{% if matrix_synapse_report_stats.lower() == "yes" %}
enable_metrics: True
report_stats: True
{% else %}
enable_metrics: True
report_stats: False
{% endif %}

## API Configuration ##

room_invite_state_types:
    - "m.room.join_rules"
    - "m.room.canonical_alias"
    - "m.room.avatar"
    - "m.room.name"

{% if matrix_synapse_appservices %}
app_service_config_files:
{% for appservice in matrix_synapse_appservices %}    - "{{ appservice }}"
{% endfor %}
{% else %}
app_service_config_files: []
{% endif %}

macaroon_secret_key: "{{ matrix_synapse_macaroon_secret_key }}"
expire_access_token: False

## Signing Keys ##

signing_key_path: "/data/{{ matrix_synapse_server_name }}.signing.key"
old_signing_keys: {}
key_refresh_interval: "1d" # 1 Day.

# The trusted servers to download signing keys from.
perspectives:
  servers:
    "matrix.org":
      verify_keys:
        "ed25519:auto":
          key: "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"

password_config:
   enabled: true

{#% if SYNAPSE_SMTP_HOST %}
email:
   enable_notifs: false
   smtp_host: "{{ SYNAPSE_SMTP_HOST }}"
   smtp_port: {{ SYNAPSE_SMTP_PORT or "25" }}
   smtp_user: "{{ SYNAPSE_SMTP_USER }}"
   smtp_pass: "{{ SYNAPSE_SMTP_PASSWORD }}"
   require_transport_security: False
   notif_from: "{{ SYNAPSE_SMTP_FROM or "hostmaster@" + SYNAPSE_SERVER_NAME }}"
   app_name: Matrix
   # if template_dir is unset, uses the example templates that are part of
   # the Synapse distribution.
   #template_dir: res/templates
   notif_template_html: notif_mail.html
   notif_template_text: notif_mail.txt
   notif_for_new_users: True
   riot_base_url: "https://{{ SYNAPSE_SERVER_NAME }}"
{% endif %#}

enable_media_repo: {{ matrix_synapse_enable_media_repo }}

allow_public_rooms_without_auth: true 
allow_public_rooms_over_federation: true
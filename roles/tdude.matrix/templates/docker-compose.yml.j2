version: '2.3'
services:
  synapse:
    container_name: matrix_synapse
    image: matrixdotorg/synapse:{{ matrix_synapse_version }}
    volumes:
      - {{ matrix_synapse_data_folder }}:/data
    environment:
      UID: 927
      GID: 927
      TZ: "{{ timezone }}"
      SYNAPSE_CACHE_FACTOR: 10.0
      SYNAPSE_CONFIG_PATH: "/data/homeserver.yaml"
    networks:
      monitoring:
      matrix:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.matrix-synapse.loadbalancer.server.port=8008"
      - "traefik.docker.network=matrix_matrix"
      - "traefik.http.routers.matrix-synapse.entryPoints=web"
      - "traefik.http.routers.matrix-synapse.rule=Host(`{{ matrix_synapse_server_name }}`) && (PathPrefix(`/_matrix`) || PathPrefix(`/_synapse`) || PathPrefix(`/.well-known/matrix`))"
      - "traefik.http.routers.matrix-synapse.middlewares=https@file"
      - "traefik.http.routers.matrix-synapse-secure.entryPoints=web-secure"
      - "traefik.http.routers.matrix-synapse-secure.tls.certresolver=le"
      - "traefik.http.routers.matrix-synapse-secure.rule=Host(`{{ matrix_synapse_server_name }}`) && (PathPrefix(`/_matrix`) || PathPrefix(`/_synapse`) || PathPrefix(`/.well-known/matrix`))"
      - "traefik.http.routers.matrix-synapse-secure.middlewares=https@file"
      - "traefik.http.routers.matrix-synapse-secure.tls=true"
  postgres:
    container_name: matrix_postgres
    image: postgres:{{ matrix_postgres_version }}
    volumes:
      - {{ matrix_postgres_data_folder }}:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: {{ matrix_synapse_postgres_db }}
      POSTGRES_USER: {{ matrix_synapse_postgres_user }}
      POSTGRES_PASSWORD: {{ matrix_synapse_postgres_password }}
    networks:
      matrix:
  appservice_webhooks:
    user: "927:927"
    container_name: matrix_appservice_webhooks
    image: starcraft66/matrix-appservice-webhooks:{{ matrix_appservice_webhooks_version }}
    volumes:
      - "{{ matrix_appservice_webhooks_data_folder }}:/data"
    restart: unless-stopped
    networks:
      matrix:
  nginx_element:
    container_name: matrix_nginx
    image: bubuntux/element-web:{{ matrix_element_version }}
    volumes:
      - "{{ matrix_element_data_folder }}/config.json:/etc/element-web/config.json:ro"
    networks:
      matrix:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.matrix-element.loadbalancer.server.port=80"
      - "traefik.docker.network=matrix_matrix"
      - "traefik.http.routers.matrix-element.entryPoints=web"
      - "traefik.http.routers.matrix-element.rule=Host(`{{ matrix_synapse_server_name }}`)"
      - "traefik.http.routers.matrix-element.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.matrix-element-secure.entryPoints=web-secure"
      - "traefik.http.routers.matrix-element-secure.tls.certresolver=le"
      - "traefik.http.routers.matrix-element-secure.rule=Host(`{{ matrix_synapse_server_name }}`)"
      - "traefik.http.routers.matrix-element-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.matrix-element-secure.tls=true"
  minio:
    container_name: matrix_minio
    image: minio/minio:{{ matrix_minio_version }}
    command: "minio gateway b2 --compat --address \":80\""
    environment:
      MINIO_ACCESS_KEY: "{{ matrix_minio_b2_account_id }}"
      MINIO_SECRET_KEY: "{{ matrix_minio_b2_application_key }}"
      MINIO_PROMETHEUS_AUTH_TYPE: "public" # minio is hidden behind forward auth so this is "acceptable"
    networks:
      monitoring:
      matrix:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.matrix-minio.loadbalancer.server.port=80"
      - "traefik.docker.network=matrix_matrix"
      - "traefik.http.routers.matrix-minio.entryPoints=web"
      - "traefik.http.routers.matrix-minio.rule=Host(`minio.{{ matrix_synapse_server_name }}`)"
      - "traefik.http.routers.matrix-minio.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.matrix-minio-secure.entryPoints=web-secure"
      - "traefik.http.routers.matrix-minio-secure.tls.certresolver=le"
      - "traefik.http.routers.matrix-minio-secure.rule=Host(`minio.{{ matrix_synapse_server_name }}`)"
      - "traefik.http.routers.matrix-minio-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.matrix-minio-secure.tls=true"
  matrix-media-repo:
    container_name: matrix_media_repo
    image: turt2live/matrix-media-repo:{{ matrix_media_repo_version }}
    volumes:
      - "{{ matrix_media_repo_data_folder }}:/data"
    networks:
      monitoring:
      matrix:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.matrix-media-repo.loadbalancer.server.port=8000"
      - "traefik.docker.network=matrix_matrix"
      - "traefik.http.routers.matrix-media-repo.entryPoints=web"
      - "traefik.http.routers.matrix-media-repo.rule=Host(`{{ matrix_synapse_server_name }}`) && PathPrefix(`/_matrix/media`)"
      - "traefik.http.routers.matrix-media-repo.middlewares=https@file"
      - "traefik.http.routers.matrix-media-repo-secure.entryPoints=web-secure"
      - "traefik.http.routers.matrix-media-repo-secure.tls.certresolver=le"
      - "traefik.http.routers.matrix-media-repo-secure.rule=Host(`{{ matrix_synapse_server_name }}`) && PathPrefix(`/_matrix/media`)"
      - "traefik.http.routers.matrix-media-repo-secure.middlewares=https@file"
      - "traefik.http.routers.matrix-media-repo-secure.tls=true"
  mjolnir:
    container_name: matrix_mjolnir
    image: matrixdotorg/mjolnir
    user: "927:927"
    volumes:
      - "{{ matrix_mjolnir_data_folder }}:/data"
    networks:
      matrix:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"

networks:
  monitoring:
    external:
      name: monitoring
  matrix:
    #name: matrix
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-matrix
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.72.128.0/24
          gateway: 10.72.128.1
        - subnet: "2a01:4f9:3a:15b0:7::/80"
          gateway: "2a01:4f9:3a:15b0:7::1"

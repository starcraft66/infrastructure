---

- name: Create media server group
  group:
    name: mediaserver
    state: present
    gid: 949

- name: Create media server user
  user:
    name: mediaserver
    password: "!"
    update_password: on_create
    group: mediaserver
    uid: 949
    state: present
    shell: /bin/bash
    system: yes
    createhome: yes
    home: /home/mediaserver

- name: Create the mediaserver folders
  file:
    name: "{{ item }}"
    state: directory
    owner: mediaserver
    group: mediaserver
    mode: 0770
  with_items:
    - "{{ mediaserver_installation_folder }}"
    - "{{ plex_media_folder }}"
    - "{{ deluge_config_folder }}"
    - "{{ jackett_config_folder }}"
    - "{{ sonarr_config_folder }}"
    - "{{ radarr_config_folder }}"
    - "{{ plex_config_folder }}"
    - "{{ plex_transcode_folder }}"

- name: Install the jackett config
  template:
    src: "jackett.j2"
    dest: "{{ mediaserver_installation_server }}/jackett/Jackett/ServerConfig.json"
    mode: 0660
    owner: mediaserver
    group: mediaserver

- name: Install the radarr config
  template:
    src: "radarr.j2"
    dest: "{{ mediaserver_installation_server }}/radarr/config.xml"
    mode: 0660
    owner: mediaserver
    group: mediaserver

- name: Install the sonarr config
  template:
    src: "sonarr.j2"
    dest: "{{ mediaserver_installation_server }}/sonarr/config.xml"
    mode: 0660
    owner: mediaserver
    group: mediaserver

- name: Install the production compose file
  template:
    src: "docker-compose.yml.j2"
    dest: "{{ mediaserver_installation_server }}/docker-compose.yml"
    mode: 0660
    owner: mediaserver
    group: mediaserver

- name: Create the mediaserver network
  docker_network:
    name: mediaserver
    state: present

- name: Update the docker service
  docker_service:
    project_src: "{{ mediaserver_installation_server }}"
    files: docker-compose.yml
    state: present
    recreate: smart
    pull: yes
    remove_orphans: yes
version: '2.3'
services:
  deluge:
    container_name: deluge
    image: linuxserver/deluge:{{ mediaserver_deluge_version }}
    restart: always
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}" # timezone
    volumes:
      - {{ mediaserver_plex_media_folder }}/ongoing:/downloads # download folder
      - {{ mediaserver_deluge_config_folder }}:/config # config files
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"
      - "traefik.http.routers.deluge.entryPoints=web"
      - "traefik.http.routers.deluge.rule=Host(`{{ mediaserver_deluge_hostname }}`)"
      - "traefik.http.routers.deluge.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.deluge-secure.entryPoints=web-secure"
      - "traefik.http.routers.deluge-secure.tls.certresolver=le"
      - "traefik.http.routers.deluge-secure.rule=Host(`{{ mediaserver_deluge_hostname }}`)"
      - "traefik.http.routers.deluge-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.deluge-secure.tls=true"
    networks:
      - mediaserver

  jackett:
    container_name: jackett
    image: linuxserver/jackett:{{ mediaserver_jackett_version }}
    restart: unless-stopped
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}" # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ mediaserver_plex_media_folder }}/ongoing/torrent-blackhole:/downloads # place where to put .torrent files
      - {{ mediaserver_jackett_config_folder }}:/config # config files
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.jackett.entryPoints=web"
      - "traefik.http.routers.jackett.rule=Host(`{{ mediaserver_jackett_hostname }}`)"
      - "traefik.http.routers.jackett.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.jackett-secure.entryPoints=web-secure"
      - "traefik.http.routers.jackett-secure.tls.certresolver=le"
      - "traefik.http.routers.jackett-secure.rule=Host(`{{ mediaserver_jackett_hostname }}`)"
      - "traefik.http.routers.jackett-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.jackett-secure.tls=true"
    networks:
      - mediaserver

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:{{ mediaserver_sonarr_version }}
    restart: unless-stopped
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}" # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ mediaserver_sonarr_config_folder }}:/config # config files
      - {{ mediaserver_plex_media_folder }}/series:/tv # tv shows folder
      - {{ mediaserver_plex_media_folder }}/ongoing:/downloads # download folder
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.entryPoints=web"
      - "traefik.http.routers.sonarr.rule=Host(`{{ mediaserver_sonarr_hostname }}`)"
      - "traefik.http.routers.sonarr.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.sonarr-secure.entryPoints=web-secure"
      - "traefik.http.routers.sonarr-secure.tls.certresolver=le"
      - "traefik.http.routers.sonarr-secure.rule=Host(`{{ mediaserver_sonarr_hostname }}`)"
      - "traefik.http.routers.sonarr-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.sonarr-secure.tls=true"
    networks:
      - mediaserver

  radarr:
    container_name: radarr
    image: linuxserver/radarr:{{ mediaserver_radarr_version }}
    restart: unless-stopped
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}" # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ mediaserver_radarr_config_folder }}:/config # config files
      - {{ mediaserver_plex_media_folder }}/movies:/movies # movies folder
      - {{ mediaserver_plex_media_folder }}/ongoing:/downloads # download folder
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.entryPoints=web"
      - "traefik.http.routers.radarr.rule=Host(`{{ mediaserver_radarr_hostname }}`)"
      - "traefik.http.routers.radarr.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.radarr-secure.entryPoints=web-secure"
      - "traefik.http.routers.radarr-secure.tls.certresolver=le"
      - "traefik.http.routers.radarr-secure.rule=Host(`{{ mediaserver_radarr_hostname }}`)"
      - "traefik.http.routers.radarr-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.radarr-secure.tls=true"
    networks:
      - mediaserver

  plex-server:
    container_name: plex-server
    hostname: bedrock-plex
    image: plexinc/pms-docker:{{ mediaserver_plex_version }}
    restart: unless-stopped
    environment:
      TZ: "{{ timezone }}" # timezone
      PLEX_UID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PLEX_GID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      PLEX_CLAIM: {{ mediaserver_plex_claim_token }}
      ADVERTISE_IP: https://plex.bedrock.tdude.co
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.entryPoints=web"
      - "traefik.http.routers.plex.rule=Host(`{{ mediaserver_plex_hostname }}`)"
      - "traefik.http.routers.plex.middlewares=https@file"
      - "traefik.http.routers.plex-secure.entryPoints=web-secure"
      - "traefik.http.routers.plex-secure.tls.certresolver=le"
      - "traefik.http.routers.plex-secure.rule=Host(`{{ mediaserver_plex_hostname }}`)"
      - "traefik.http.routers.plex-secure.middlewares=https@file"
      - "traefik.http.routers.plex-secure.tls=true"
      - "traefik.http.routers.plex-plexport.entryPoints=plex"
      - "traefik.http.routers.plex-plexport.tls.certresolver=le"
      - "traefik.http.routers.plex-plexport.rule=Host(`{{ mediaserver_plex_hostname }}`)"
      - "traefik.http.routers.plex-plexport.tls=true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ mediaserver_plex_config_folder }}:/config # plex database
      - {{ mediaserver_plex_transcode_folder }}:/transcode # temp transcoded files
      - {{ mediaserver_plex_media_folder }}:/data # media library
    networks:
      - mediaserver

  tautulli:
    container_name: tautulli
    hostname: tautulli
    image: linuxserver/tautulli:{{ mediaserver_tautulli_version }}
    restart: unless-stopped
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}"  # timezone
    depends_on:
      - plex-server
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mediaserver"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
      - "traefik.http.routers.tautulli.entryPoints=web"
      - "traefik.http.routers.tautulli.rule=Host(`{{ mediaserver_tautulli_hostname }}`)"
      - "traefik.http.routers.tautulli.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.tautulli-secure.entryPoints=web-secure"
      - "traefik.http.routers.tautulli-secure.tls.certresolver=le"
      - "traefik.http.routers.tautulli-secure.rule=Host(`{{ mediaserver_tautulli_hostname }}`)"
      - "traefik.http.routers.tautulli-secure.middlewares=https@file,fwauth@file"
      - "traefik.http.routers.tautulli-secure.tls=true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - {{ mediaserver_tautulli_config_folder }}:/config # tautulli database
      - {{ mediaserver_plex_logs_folder }}:/logs # plex database
    networks:
      - mediaserver

  varken:
    container_name: varken
    hostname: varken
    image: boerderij/varken:{{ mediaserver_varken_version }}
    restart: unless-stopped
    environment:
      PUID: "{{ mediaserver_uid }}" # default user id, for downloaded files access rights
      PGID: "{{ mediaserver_gid }}" # default group id, for downloaded files access rights
      TZ: "{{ timezone }}"  # timezone
    volumes:
      - {{ mediaserver_varken_config_folder }}:/config
    networks:
      - mediaserver
      - monitoring

networks:
  mediaserver:
    external:
      name: mediaserver
  monitoring:
    external:
      name: monitoring